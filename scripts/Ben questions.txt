1. Is there a way that I can trace the calls without running the programs so I can see the dependencies?  I think I have several things that do almost the same function
	a. put print statements at the beginning and see which ones print
	b. Python profiler speeds up code, called "Profile". Trace all functions that execute and give all the calls
	c. encapsulate running code in function - like a decorator 
2. Best way to run doctest? 
3. How does debug work? 

To-do
1. Implement global to look up table names / rename database tables
2. Extend program to capture other data types
3. Unit tests for all other functions
4. rename Facility class to Daily_Prodn class
5. Create a separate Facility class with dataframes
6. put the "in process" calc into the Daily_Prodn class and see if it works
7. put the "old > susp" assertion into the Daily_Prodn class and test it
8. Add time series and dataframes
9. Separate into application, service and data layers


Notes
	1. How can I write to and call from a db?
		# easiest option: sqlite
		# if you want to use something else: pyodbc
	2. for the application layer -
		#### encapsulate input & output in functions
		# script structure:
		## bunch of definitions
		## small loop or script that does stuff, inside "if __name__ == '__main__':"
		### don't worry about this immediately - just have a short script at the end